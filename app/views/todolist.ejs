<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>
        <%=title%>
    </title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js"></script>


    <style>
        body {
            font-family: 'Courier New', Courier, monospace;
        }
    </style>
</head>

<body onload="body_onload()">

    <div id='todolist-app'>

        <h1>
            {{ title }}
        </h1>
        <hr>

        <input type="button" name="complete-all" id="complete-all" v-on:click="completeAll" value="Complete All">
        <input type="text" class="newTodo" id="newTodo" v-model="newTodo" v-on:keyup.enter="addTodo">

        <ul>
            <li v-for="(item, index) in data_list">
                <input type="checkbox" v-model="item.status" style="display:none;">
                <span v-if="item.id <=9">0{{ item.id }}</span>
                <span v-else>{{ item.id }}</span>
                <span v-on:click="itemToggleCompleted({ item: item, index: index })" v-bind:style="item.status ? 'text-decoration:line-through;' : ''">
                    {{ item.content }}</span> {{ item.status ? ':)' : '' }}
                <button v-on:click="removeTodolistItem({ item: item, index: index })">X</button>
            </li>
        </ul>




    </div>

    <style>
        .newTodo {
            width: 50%;
        }
    </style>

</body>

<script>
    var _data_list = JSON.parse('<%-data_list%>');

    console.log('pure js');
    //defind vue app
    var todolist_app = null;
    var body_onload = function() {
        //alert('body_onload');
        console.log('body_onload');
        init_vue();
    };



    var init_vue = function() {

        if (typeof Vue === 'function') {

            console.log('vue ready');

            todolist_app = new Vue({
                el: '#todolist-app',
                data: {
                    data_list: _data_list,
                    title: '<%=title%>',
                    newTodo: '',

                },

                methods: {
                    addTodo(e) {

                        //console.log(e);

                        if (this.newTodo === '') return false;

                        //get max id then plus 1
                        var newid = Math.max.apply(Math, todolist_app.data_list.map(function(item, index, array) {
                            return item.id;
                        })) + 1;

                        var newTodo = {
                            id: newid,
                            content: this.newTodo,
                            status: false
                        }

                        this.data_list.push(newTodo);
                        this.newTodo = '';

                    },
                    completeAll(e) {
                        console.log(e.target.value == 'on');

                        this.data_list.forEach(function(item, index, array) {
                            item.status = true;
                        });

                    },
                    itemToggleCompleted(obj) {
                        //obj = { data: equals this a item data, index: the trigger item index }
                        console.log(obj.index);
                        (this.data_list[obj.index].status) ? this.data_list[obj.index].status = false: this.data_list[obj.index].status = true;
                    },
                    removeTodolistItem(obj) {
                        //obj = { data: equals this a item data, index: the trigger item index }
                        console.log(obj);
                        var removed = this.data_list.slice(obj.index, 1);
                        console.log(removed);
                    }

                },
            });

            console.log('vue loaded');

        } else
            alert('Vue is undefinded');

    };



    console.log('loaded js');
</script>


</html>